#!/usr/bin/env node

require('shelljs/global');
var program = require('commander')
var exists = require('fs').existsSync
var readdir=require('fs').readdirSync
var path = require('path')
var chalk = require('chalk')
var inquirer = require('inquirer')
var logger = require('../lib/logger')
var generate = require('../lib/generate')
/*
  usage
 */

program
  .usage('[project-name]')
/*
  help
 */

 program.on('--help',function(){
  console.log('Examples:')
  console.log()
  console.log(chalk.gray('# create a new project with an official template'))
  console.log(' $ afd init my-project')
  console.log()
 })
program.parse(process.argv)
 function help () {
  program.parse(process.argv)
  if (program.args.length < 1) return program.help()
}
// help()

/**
 * Padding.
 */

console.log()
process.on('exit', function () {
  console.log()
})

/**
 * Settings.
 */

var rawName = program.args[0]
var inPlace = !rawName || rawName === '.'
var name = inPlace ? path.relative('../', process.cwd()) : rawName
var to = path.resolve(rawName || '.')
/**
 * 设置模板路劲
 */
var templates,
    templatesPath
try{
 templates= readdir('../templates/')
 templatesPath='../templates/'
 if(templates.length==0){
  throw new Error('the templates is null')
 }
run()
}catch(e){
  console.log(chalk.yellow('Settings not found the template, using the default'))
  var npmG = exec('npm root -g',{silent:true}).stdout.trim();
  try{
    templates=readdir(npmG+'/autocli/templates')
    templatesPath=npmG+'/autocli/templates/'
    run()
  }catch(e){
    console.log(chalk.red(e))
  }
  
  
}

function run(){
  inquirer.prompt([{
    type: 'confirm',
    message: inPlace
      ? 'Generate project in current directory?'
      : 'Target directory exists. Continue?',
    name: 'ok',
    when: exists(to)
  },{
    type: 'list',
    name: 'template',
    message: 'Please choose the template :',
    choices: templates,
    when:function(answers){
      return !exists(to) || answers.ok
    }
  }]).then(function (answers) {
  if(!exists(to) || answers.ok){
     var tmpPath=templatesPath+answers.template
     generate(name, tmpPath, to, function (err) {
      if (err) logger.fatal(err)
      console.log()
      logger.success('Generated "%s".', name)
    })
  
  }
 
});
}


