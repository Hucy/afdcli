#!/usr/bin/env node

require('shelljs/global');
var program = require('commander')
var chalk = require('chalk')
var path = require('path')
var exists=require('fs').existsSync
var execa = require('execa');
var Listr = require('listr');
/*
  usage
 */

program
  .usage('<options> [productname]')
  .option('-i, --in ', ' Intranet pre')
  .option('-o, --out ', 'Extranet pre')


/*
  help
 */
program.on('--help', function () {
  console.log('  Examples:')
  console.log()
  console.log(chalk.gray('    # Intranet it use sftp:'))
  console.log('    $ afd pre -i')
  console.log()
  console.log(chalk.gray('  # Extranet it use svn :'))
  console.log('    $ afd pre -o ')
  console.log()
})

function help () {
  program.parse(process.argv)
  if (program.rawArgs.length < 3) return program.help()
}
help()

/**
 * Padding.
 */

console.log()
process.on('exit', function () {
  console.log()
})
/*
  setting
 */
if (program.in) {
 if(exists('./package.json')&&exists('./config')&&exists('./gulpfile.js')){
          const tasks = new Listr([
    {
        message: 'Build file',
        task: () => execa('npm', ['run'],['dev'])
    },
    {
        message: '',
        task: () => execa('gulp', ['init'])
    }

]);
    tasks.run().catch(err => {
    console.error(err);

})
}else{
  console.log(chalk.yellow('This folder is not a correct project'))
}

}


if (program.out) {
  if(program.args[0]){
    console.log(program.args);
  }else{
    console.log(chalk.yellow('Enter a project name to watch'))
  }

}
